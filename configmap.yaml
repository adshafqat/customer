kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-deployment
  namespace: frontend
  uid: 8db0ddac-ad95-45e5-bc7f-26123f8849ae
  resourceVersion: '3558512435'
  generation: 5
  creationTimestamp: '2024-06-27T13:27:58Z'
  annotations:
    deployment.kubernetes.io/revision: '3'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:replicas': {}
      subresource: scale
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2024-06-27T14:36:31Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:containers':
                'k:{"name":"nginx"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/etc/nginx/conf.d/"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":80,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext':
                .: {}
                'f:runAsUser': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"nginx-config"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-06-27T17:09:51Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-configmap
            defaultMode: 420
      containers:
        - name: nginx
          image: 'nginxinc/nginx-unprivileged:latest'
          ports:
            - containerPort: 80
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsUser: 1001940000
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600




kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configmap
  namespace: frontend
  uid: 3860c338-e879-4388-96da-2109f9c53f2a
  resourceVersion: '3557798240'
  creationTimestamp: '2024-06-27T13:27:58Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2024-06-27T16:04:44Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:default.conf': {}
data:
  default.conf: |
    server {
      listen 8080;
      server_name example.com;
      location / {
        proxy_pass  http://frontendapp-ss-0:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        
        post_action @post_action; 
      }

      location @post_action {
        internal;
        proxy_pass  http://frontendapp-ss-1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        
      }


    }
